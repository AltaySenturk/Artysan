// <auto-generated />
using System;
using Artysan_DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Artysan_DAL.Migrations
{
    [DbContext(typeof(ArtysanDbContext))]
    [Migration("20240827163717_Final")]
    partial class Final
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Artysan_DAL.Models.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Artysan_DAL.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArtImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtistLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtistName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtImageUrl = "../img/resim.com",
                            ArtistLink = "www.example.com",
                            ArtistName = "Hande Yener"
                        },
                        new
                        {
                            Id = 2,
                            ArtImageUrl = "../img/resim.com",
                            ArtistLink = "www.example.com"
                        },
                        new
                        {
                            Id = 3,
                            ArtImageUrl = "/img/resim.com",
                            ArtistLink = "www.example.com"
                        },
                        new
                        {
                            Id = 4,
                            ArtImageUrl = "/img/resim.com",
                            ArtistLink = "www.example.com"
                        },
                        new
                        {
                            Id = 5,
                            ArtImageUrl = "../img/resim.com",
                            ArtistLink = "www.example.com"
                        },
                        new
                        {
                            Id = 6,
                            ArtImageUrl = "../img/artists/sezen-aksu.jpg",
                            ArtistLink = "www.example.com/sezen-aksu",
                            ArtistName = "Sezen Aksu"
                        },
                        new
                        {
                            Id = 7,
                            ArtImageUrl = "../img/theatre/hamlet.jpg",
                            ArtistLink = "www.example.com/devlet-tiyatrolari"
                        },
                        new
                        {
                            Id = 8,
                            ArtImageUrl = "../img/sports/basketball.jpg",
                            ArtistLink = "www.example.com/turkish-basketball-league"
                        },
                        new
                        {
                            Id = 9,
                            ArtImageUrl = "../img/directors/james-cameron.jpg",
                            ArtistLink = "www.example.com/james-cameron"
                        },
                        new
                        {
                            Id = 10,
                            ArtImageUrl = "../img/workshop/photoshop-icon.jpg",
                            ArtistLink = "www.example.com/adobe-experts"
                        },
                        new
                        {
                            Id = 11,
                            ArtImageUrl = "../img/artists/coldplay.jpg",
                            ArtistLink = "www.example.com/coldplay"
                        },
                        new
                        {
                            Id = 12,
                            ArtImageUrl = "../img/directors/nolan-icon.jpg",
                            ArtistLink = "www.example.com/christopher-nolan"
                        },
                        new
                        {
                            Id = 13,
                            ArtImageUrl = "../img/actors/macbeth-oyuncular.jpg",
                            ArtistLink = "www.example.com/oyuncular"
                        },
                        new
                        {
                            Id = 14,
                            ArtImageUrl = "../img/sports/superlig-logo.jpg",
                            ArtistLink = "www.example.com/superlig"
                        },
                        new
                        {
                            Id = 15,
                            ArtImageUrl = "../img/artists/duman.jpg",
                            ArtistLink = "www.example.com/duman"
                        },
                        new
                        {
                            Id = 16,
                            ArtImageUrl = "../img/directors/denis-villeneuve.jpg",
                            ArtistLink = "www.example.com/denis-villeneuve"
                        },
                        new
                        {
                            Id = 17,
                            ArtImageUrl = "../img/speakers/elon-musk.jpg",
                            ArtistLink = "www.example.com/elon-musk"
                        },
                        new
                        {
                            Id = 18,
                            ArtImageUrl = "../img/sports/anadoluefes.jpg",
                            ArtistLink = "www.example.com/anadolu-efes"
                        },
                        new
                        {
                            Id = 19,
                            ArtImageUrl = "../img/sports/tbl-logo.jpg",
                            ArtistLink = "www.example.com/tbl"
                        },
                        new
                        {
                            Id = 20,
                            ArtImageUrl = "../img/musicals/les-miserables.jpg",
                            ArtistLink = "www.example.com/les-miserables"
                        },
                        new
                        {
                            Id = 21,
                            ArtImageUrl = "../img/sports/superlig-logo.jpg",
                            ArtistLink = "www.example.com/superlig"
                        },
                        new
                        {
                            Id = 22,
                            ArtImageUrl = "../img/concerts/rockfestival.jpg",
                            ArtistLink = "www.example.com/rock-festival"
                        },
                        new
                        {
                            Id = 23,
                            ArtImageUrl = "../img/movies/blockbuster.jpg",
                            ArtistLink = "www.example.com/blockbuster-movie"
                        },
                        new
                        {
                            Id = 24,
                            ArtImageUrl = "../img/sports/milli-takim-logo.jpg",
                            ArtistLink = "www.example.com/milli-takim"
                        },
                        new
                        {
                            Id = 25,
                            ArtImageUrl = "../img/concerts/tarkan.jpg",
                            ArtistLink = "www.example.com/tarkan"
                        },
                        new
                        {
                            Id = 26,
                            ArtImageUrl = "../img/movies/iff-logo.jpg",
                            ArtistLink = "www.example.com/istanbul-film-festivali"
                        },
                        new
                        {
                            Id = 27,
                            ArtImageUrl = "../img/sports/champions-league-logo.jpg",
                            ArtistLink = "www.example.com/champions-league"
                        },
                        new
                        {
                            Id = 28,
                            ArtImageUrl = "../img/concert/muzik-festivali-logo.jpg",
                            ArtistLink = "www.example.com/muzik-festivali"
                        },
                        new
                        {
                            Id = 29,
                            ArtImageUrl = "../img/theater/tiyatro-festivali-logo.jpg",
                            ArtistLink = "www.example.com/tiyatro-festivali"
                        },
                        new
                        {
                            Id = 30,
                            ArtImageUrl = "../img/cinema/star-wars-poster.jpg",
                            ArtistLink = "www.example.com/star-wars"
                        },
                        new
                        {
                            Id = 31,
                            ArtImageUrl = "../img/cinema/avengers-poster.jpg",
                            ArtistLink = "www.example.com/avengers"
                        },
                        new
                        {
                            Id = 32,
                            ArtImageUrl = "../img/cinema/frozen-poster.jpg",
                            ArtistLink = "www.example.com/frozen"
                        });
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CatDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 2,
                            CatDescription = "Tiyatro oyunu",
                            CatName = "Tiyatro"
                        },
                        new
                        {
                            id = 3,
                            CatDescription = "Futbol Maçı",
                            CatName = "Spor"
                        },
                        new
                        {
                            id = 4,
                            CatName = "Sinema"
                        },
                        new
                        {
                            id = 5,
                            CatName = "Workshop"
                        },
                        new
                        {
                            id = 6,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 7,
                            CatDescription = "Klasik tiyatro oyunu",
                            CatName = "Tiyatro"
                        },
                        new
                        {
                            id = 8,
                            CatDescription = "Basketbol Maçı",
                            CatName = "Spor"
                        },
                        new
                        {
                            id = 9,
                            CatName = "Sinema"
                        },
                        new
                        {
                            id = 10,
                            CatName = "Workshop"
                        },
                        new
                        {
                            id = 11,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 12,
                            CatName = "Sinema"
                        },
                        new
                        {
                            id = 13,
                            CatName = "Tiyatro"
                        },
                        new
                        {
                            id = 14,
                            CatName = "Spor"
                        },
                        new
                        {
                            id = 15,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 16,
                            CatName = "Sinema"
                        },
                        new
                        {
                            id = 17,
                            CatName = "Workshop"
                        },
                        new
                        {
                            id = 18,
                            CatName = "Basketbol"
                        },
                        new
                        {
                            id = 19,
                            CatName = "Spor"
                        },
                        new
                        {
                            id = 20,
                            CatName = "Müzikal"
                        },
                        new
                        {
                            id = 21,
                            CatName = "Spor"
                        },
                        new
                        {
                            id = 22,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 23,
                            CatName = "Sinema"
                        },
                        new
                        {
                            id = 24,
                            CatName = "Spor"
                        },
                        new
                        {
                            id = 25,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 26,
                            CatName = "Sinema"
                        },
                        new
                        {
                            id = 27,
                            CatName = "Spor"
                        },
                        new
                        {
                            id = 28,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 29,
                            CatName = "Tiyatro"
                        },
                        new
                        {
                            id = 30,
                            CatName = "Sinema"
                        },
                        new
                        {
                            id = 31,
                            CatName = "Sinema"
                        },
                        new
                        {
                            id = 32,
                            CatName = "Sinema"
                        });
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsFuture")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPopular")
                        .HasColumnType("bit");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("TicketId");

                    b.ToTable("events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Hande Yener'in yıllar sonra tekrar döndüğü Oran sahnesinde ankara yerinde oynayacak",
                            EventDate = "21.08.2024",
                            ImageUrl = "/img/Concert/hande.jpeg",
                            IsFuture = false,
                            IsPopular = false,
                            LocationId = 1,
                            Name = "POP Gecesi Festivali",
                            Stock = 500,
                            TicketId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Yıllar'ın eskitemediği Efsane oyun lüküs hayat seyirciyle tekrar buluşuyor",
                            EventDate = "21.09.2024",
                            ImageUrl = "/img/Theatre/lukus.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 2,
                            Name = "Lüküs Hayat",
                            Stock = 500,
                            TicketId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Galatasaray'ın ev sahibi olduğu süper lig'in 2.haftasında rakip Konyaspor ",
                            EventDate = "21.08.2024",
                            ImageUrl = "/img/Sport/gs.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 3,
                            Name = "Galatasaray-Konyaspor",
                            Stock = 500,
                            TicketId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Denis Villeneuve efsane bilim kurgu romanı Dune ile seyirci karşısına çıkmaya hazırlanıyor",
                            EventDate = "10.09.2024",
                            ImageUrl = "/img/Cinema/dune.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 4,
                            Name = "Dune Çöl Gezegeni",
                            Stock = 500,
                            TicketId = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "Heykel yapmayı Gandalf ile öğrenin",
                            EventDate = "21.08.2024",
                            ImageUrl = "/img/Workshop/gandalf.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 5,
                            Name = "Gandalf Heykel Workshop",
                            Stock = 500,
                            TicketId = 5
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Sezen aksuyla harika bir müzik gecesine hazır olun",
                            EventDate = "15.12.2024",
                            ImageUrl = "/img/Concert/sezen.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 6,
                            Name = "Sezen Aksu Yılbaşı Özel Konseri",
                            Stock = 400,
                            TicketId = 6
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Shakespeare'in müthiş kaleminden tiyatro sahnesine uyarlanan harika bir oyun Hamlet karşınızda",
                            EventDate = "05.01.2025",
                            ImageUrl = "/img/Theatre/hamlet.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 7,
                            Name = "Hamlet",
                            Stock = 300,
                            TicketId = 7
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Fenerbahçe ülker arena da anadolu efesi ağırlıyor Šarūnas Jasikevičius'un takımı Tomislav Mijatović'in takımına karşı bu muazzam karşılaşma da kozlarını paylaşacaklar",
                            EventDate = "22.02.2025",
                            ImageUrl = "/img/Sport/efes.jpg",
                            IsFuture = false,
                            IsPopular = false,
                            LocationId = 8,
                            Name = "Fenerbahçe Beko - Anadolu Efes",
                            Stock = 1000,
                            TicketId = 8
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Description = "James Cameron'ın sinema için yarattığı avatar evreni 3.filmi ile devam ediyor",
                            EventDate = "10.03.2025",
                            ImageUrl = "/img/Cinema/avatar.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 9,
                            Name = "Avatar 3 Galası",
                            Stock = 200,
                            TicketId = 9
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Description = "Photoshop yeteneklerinizi geliştireceğiniz harika bir eğitim",
                            EventDate = "18.04.2025",
                            ImageUrl = "/img/Workshop/psdw.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 10,
                            Name = "Adobe Photoshop Masterclass",
                            Stock = 50,
                            TicketId = 10
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            Description = "Coldplay'in muhteşem performansıyla unutulmaz bir gece",
                            EventDate = "22.05.2025",
                            ImageUrl = "/img/Concert/coldplay.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 11,
                            Name = "Coldplay Istanbul Konseri",
                            Stock = 1000,
                            TicketId = 11
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 4,
                            Description = "Christopher Nolan'ın başyapıtı Inception'ın IMAX formatında özel gösterimi",
                            EventDate = "20.07.2025",
                            ImageUrl = "/img/Cinema/inception.jpg",
                            IsFuture = true,
                            IsPopular = true,
                            LocationId = 15,
                            Name = "Inception: IMAX Özel Gösterimi",
                            Stock = 300,
                            TicketId = 12
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "Shakespeare'in Macbeth eseri, Zorlu PSM'de unutulmaz bir gösteri",
                            EventDate = "15.08.2025",
                            ImageUrl = "/img/Theatre/macbeth.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 13,
                            Name = "Macbeth",
                            Stock = 250,
                            TicketId = 13
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            Description = "Türk futbolunun en büyük derbisi, Fenerbahçe ile Galatasaray karşı karşıya",
                            EventDate = "10.08.2025",
                            ImageUrl = "/img/Sport/derby.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 14,
                            Name = "Fenerbahçe - Galatasaray",
                            Stock = 5000,
                            TicketId = 14
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            Description = "Duman grubu, en sevilen şarkılarıyla KüçükÇiftlik Park'ta",
                            EventDate = "25.09.2025",
                            ImageUrl = "/img/Concert/duman.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 15,
                            Name = "Duman Konseri",
                            Stock = 3000,
                            TicketId = 15
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            Description = "Denis Villeneuve'ün yönettiği Dune serisinin üçüncü filminin gösterimi",
                            EventDate = "30.10.2025",
                            ImageUrl = "/img/Cinema/dunelll.jpg",
                            IsFuture = true,
                            IsPopular = true,
                            LocationId = 16,
                            Name = "Dune Part Three",
                            Stock = 400,
                            TicketId = 16
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 5,
                            Description = "Dünya çapında teknoloji liderlerinin bir araya geldiği ve Elon Musk'ın edindiği tecrübeleri dinleyecilere aktaracağı harika bir eğitim zirvesi",
                            EventDate = "15.11.2025",
                            ImageUrl = "/img/Workshop/Elon.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 17,
                            Name = "Global Tech Summit 2025",
                            Stock = 1000,
                            TicketId = 17
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            Description = "Türk basketbolunun iki devi Euroleague maçında karşı karşıya geliyor",
                            EventDate = "12.11.2025",
                            ImageUrl = "/img/Sport/efes.jpg",
                            IsFuture = false,
                            IsPopular = false,
                            LocationId = 18,
                            Name = "Anadolu Efes - Fenerbahçe Beko Euroleague Maçı",
                            Stock = 1000,
                            TicketId = 18
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            Description = "Galatasaray Kasımpaşa'yı evinde ağırlıyor",
                            EventDate = "20.01.2026",
                            ImageUrl = "/img/Sport/Kasımpaşa.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 19,
                            Name = "Galatasaray - Kasımpaşa",
                            Stock = 1500,
                            TicketId = 19
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            Description = "Dünyaca ünlü Les Misérables müzikali Türkçe prodüksiyonu ile Zorlu PSM'de",
                            EventDate = "14.02.2026",
                            ImageUrl = "/img/Concert/misera.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 20,
                            Name = "Les Misérables Müzikali",
                            Stock = 800,
                            TicketId = 20
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 3,
                            Description = "Türkiye Süper Ligi'nin en büyük derbilerinden biri Beşiktaş ile Galatasaray karşı karşıya",
                            EventDate = "05.03.2026",
                            ImageUrl = "/img/Sport/bjk.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 21,
                            Name = "Süper Lig Derbisi: Beşiktaş vs Galatasaray",
                            Stock = 2000,
                            TicketId = 21
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 1,
                            Description = "Türkiye'nin en büyük rock festivali, yerli ve yabancı sanatçıların katılımıyla Küçükçiftlik Park'ta",
                            EventDate = "18.04.2025",
                            ImageUrl = "/img/Concert/Metallica.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 22,
                            Name = "Metallica Konseri",
                            Stock = 5000,
                            TicketId = 22
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            Description = "Yılın en çok beklenen aksiyon filmi",
                            EventDate = "30.05.2026",
                            ImageUrl = "/img/Cinema/blockbuster.jpg",
                            IsFuture = true,
                            IsPopular = true,
                            LocationId = 23,
                            Name = "Blockbuster",
                            Stock = 300,
                            TicketId = 23
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 3,
                            Description = "Türkiye A Milli Futbol Takımı'nın Almanya ile oynayacağı önemli hazırlık maçı",
                            EventDate = "15.06.2025",
                            ImageUrl = "/img/Sport/Almanya.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 24,
                            Name = "Türkiye - Almanya Milli Maç",
                            Stock = 2500,
                            TicketId = 24
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 1,
                            Description = "Megastar Tarkan'ın muhteşem yaz konseri, en sevilen şarkılarıyla Harbiye Açık Hava'da",
                            EventDate = "22.07.2025",
                            ImageUrl = "/img/Concert/tarkan.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 25,
                            Name = "Tarkan Yaz Konseri",
                            Stock = 3000,
                            TicketId = 25
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 4,
                            Description = "Ters yüz filminin devam filmi izlyeciyle buluşuyor",
                            EventDate = "10.08.2026",
                            ImageUrl = "/img/Cinema/ters.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 26,
                            Name = "Ters yüz 2",
                            Stock = 200,
                            TicketId = 26
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 3,
                            Description = "2026 UEFA Şampiyonlar Ligi final maçı",
                            EventDate = "22.07.2025",
                            ImageUrl = "/img/Sport/uefa.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 27,
                            Name = "UEFA Champions League Final",
                            Stock = 5000,
                            TicketId = 27
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 1,
                            Description = "2026 İstanbul Müzik Festivali VIP biletleri",
                            EventDate = "12.09.2026",
                            ImageUrl = "/img/Concert/Demet.jpg",
                            IsFuture = false,
                            IsPopular = true,
                            LocationId = 28,
                            Name = "Demet Akalın konseri",
                            Stock = 1500,
                            TicketId = 28
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            Description = "Istanbul Efedisi Zorlu PSM'de seyirci karşısına tekrardan çıkıyor",
                            EventDate = "30.10.2026",
                            ImageUrl = "/img/Theatre/Istanbulefe.jpg",
                            IsFuture = false,
                            IsPopular = false,
                            LocationId = 29,
                            Name = "İstanbul Efendisi",
                            Stock = 1000,
                            TicketId = 29
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 4,
                            Description = "Star Wars filmi Skywalker Saga'dan sonra yeni bir filme karşınızda olmaya geliyor",
                            EventDate = "10.11.2026",
                            ImageUrl = "/img/Cinema/starwars.jpg",
                            IsFuture = true,
                            IsPopular = true,
                            LocationId = 30,
                            Name = "Star Wars Mandalorian ve Grogu'nun maceraları ",
                            Stock = 200,
                            TicketId = 30
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 4,
                            Description = "Yeni Avengers filmi galasında standart koltuk",
                            EventDate = "18.11.2026",
                            ImageUrl = "/img/Cinema/avengers.jpg",
                            IsFuture = true,
                            IsPopular = true,
                            LocationId = 31,
                            Name = "Avengers Secret Wars",
                            Stock = 300,
                            TicketId = 31
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 4,
                            Description = "Frozen III filmi galasında aile salonu keyfi",
                            EventDate = "25.12.2026",
                            ImageUrl = "/img/Cinema/frozen.jpg",
                            IsFuture = true,
                            IsPopular = false,
                            LocationId = 32,
                            Name = "Frozen III ",
                            Stock = 150,
                            TicketId = 32
                        });
                });

            modelBuilder.Entity("Artysan_Entities.Entites.EventArtist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("EventId");

                    b.ToTable("eventArtists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            EventId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            EventId = 2
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            EventId = 3
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            EventId = 4
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            EventId = 5
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 6,
                            EventId = 6
                        },
                        new
                        {
                            Id = 7,
                            ArtistId = 7,
                            EventId = 7
                        },
                        new
                        {
                            Id = 8,
                            ArtistId = 8,
                            EventId = 8
                        },
                        new
                        {
                            Id = 9,
                            ArtistId = 9,
                            EventId = 9
                        },
                        new
                        {
                            Id = 10,
                            ArtistId = 10,
                            EventId = 10
                        },
                        new
                        {
                            Id = 11,
                            ArtistId = 11,
                            EventId = 11
                        },
                        new
                        {
                            Id = 12,
                            ArtistId = 8,
                            EventId = 12
                        },
                        new
                        {
                            Id = 13,
                            ArtistId = 13,
                            EventId = 13
                        },
                        new
                        {
                            Id = 14,
                            ArtistId = 14,
                            EventId = 14
                        },
                        new
                        {
                            Id = 15,
                            ArtistId = 15,
                            EventId = 15
                        },
                        new
                        {
                            Id = 16,
                            ArtistId = 16,
                            EventId = 16
                        },
                        new
                        {
                            Id = 17,
                            ArtistId = 17,
                            EventId = 17
                        },
                        new
                        {
                            Id = 18,
                            ArtistId = 18,
                            EventId = 18
                        },
                        new
                        {
                            Id = 19,
                            ArtistId = 19,
                            EventId = 19
                        },
                        new
                        {
                            Id = 20,
                            ArtistId = 20,
                            EventId = 20
                        },
                        new
                        {
                            Id = 21,
                            ArtistId = 21,
                            EventId = 21
                        },
                        new
                        {
                            Id = 22,
                            ArtistId = 22,
                            EventId = 22
                        },
                        new
                        {
                            Id = 23,
                            ArtistId = 23,
                            EventId = 23
                        },
                        new
                        {
                            Id = 24,
                            ArtistId = 24,
                            EventId = 24
                        },
                        new
                        {
                            Id = 25,
                            ArtistId = 25,
                            EventId = 25
                        },
                        new
                        {
                            Id = 26,
                            ArtistId = 26,
                            EventId = 26
                        },
                        new
                        {
                            Id = 27,
                            ArtistId = 27,
                            EventId = 27
                        },
                        new
                        {
                            Id = 28,
                            ArtistId = 28,
                            EventId = 28
                        },
                        new
                        {
                            Id = 29,
                            ArtistId = 29,
                            EventId = 29
                        },
                        new
                        {
                            Id = 30,
                            ArtistId = 30,
                            EventId = 30
                        },
                        new
                        {
                            Id = 31,
                            ArtistId = 31,
                            EventId = 31
                        },
                        new
                        {
                            Id = 32,
                            ArtistId = 32,
                            EventId = 32
                        });
                });

            modelBuilder.Entity("Artysan_Entities.Entites.EventSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("SalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventSale");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 2,
                            EventId = 1,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            EventId = 2,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            EventId = 3,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            EventId = 4,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            EventId = 5,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 6,
                            EventId = 6,
                            SalDate = "01.10.2024",
                            TotalPrice = 1500m,
                            TotalQuantity = 250
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 7,
                            EventId = 7,
                            SalDate = "15.11.2024",
                            TotalPrice = 600m,
                            TotalQuantity = 150
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 8,
                            EventId = 8,
                            SalDate = "10.01.2025",
                            TotalPrice = 1500m,
                            TotalQuantity = 500
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 9,
                            EventId = 9,
                            SalDate = "01.02.2025",
                            TotalPrice = 1500m,
                            TotalQuantity = 100
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 10,
                            EventId = 10,
                            SalDate = "01.03.2025",
                            TotalPrice = 3000m,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 11,
                            EventId = 11,
                            SalDate = "01.04.2025",
                            TotalPrice = 10000m,
                            TotalQuantity = 200
                        },
                        new
                        {
                            Id = 12,
                            CustomerId = 12,
                            EventId = 12,
                            SalDate = "01.06.2025",
                            TotalPrice = 240m,
                            TotalQuantity = 4
                        },
                        new
                        {
                            Id = 13,
                            CustomerId = 13,
                            EventId = 13,
                            SalDate = "01.07.2025",
                            TotalPrice = 900m,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 14,
                            CustomerId = 14,
                            EventId = 14,
                            SalDate = "01.07.2025",
                            TotalPrice = 2000m,
                            TotalQuantity = 100
                        },
                        new
                        {
                            Id = 15,
                            CustomerId = 15,
                            EventId = 15,
                            SalDate = "01.08.2025",
                            TotalPrice = 1800m,
                            TotalQuantity = 60
                        },
                        new
                        {
                            Id = 16,
                            CustomerId = 16,
                            EventId = 16,
                            SalDate = "01.09.2025",
                            TotalPrice = 960m,
                            TotalQuantity = 80
                        },
                        new
                        {
                            Id = 17,
                            CustomerId = 17,
                            EventId = 17,
                            SalDate = "01.10.2025",
                            TotalPrice = 3750m,
                            TotalQuantity = 50
                        },
                        new
                        {
                            Id = 18,
                            CustomerId = 18,
                            EventId = 18,
                            SalDate = "15.10.2025",
                            TotalPrice = 600m,
                            TotalQuantity = 2
                        },
                        new
                        {
                            Id = 19,
                            CustomerId = 19,
                            EventId = 19,
                            SalDate = "01.12.2025",
                            TotalPrice = 2000m,
                            TotalQuantity = 40
                        },
                        new
                        {
                            Id = 20,
                            CustomerId = 20,
                            EventId = 20,
                            SalDate = "01.01.2026",
                            TotalPrice = 1080m,
                            TotalQuantity = 60
                        },
                        new
                        {
                            Id = 21,
                            CustomerId = 21,
                            EventId = 21,
                            SalDate = "05.02.2026",
                            TotalPrice = 1500m,
                            TotalQuantity = 50
                        },
                        new
                        {
                            Id = 22,
                            CustomerId = 22,
                            EventId = 22,
                            SalDate = "18.02.2026",
                            TotalPrice = 2000m,
                            TotalQuantity = 80
                        },
                        new
                        {
                            Id = 23,
                            CustomerId = 23,
                            EventId = 23,
                            SalDate = "30.04.2026",
                            TotalPrice = 360m,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 24,
                            CustomerId = 24,
                            EventId = 24,
                            SalDate = "15.05.2026",
                            TotalPrice = 1575m,
                            TotalQuantity = 45
                        },
                        new
                        {
                            Id = 25,
                            CustomerId = 25,
                            EventId = 25,
                            SalDate = "22.06.2026",
                            TotalPrice = 2800m,
                            TotalQuantity = 70
                        },
                        new
                        {
                            Id = 26,
                            CustomerId = 26,
                            EventId = 26,
                            SalDate = "10.07.2026",
                            TotalPrice = 300m,
                            TotalQuantity = 20
                        },
                        new
                        {
                            Id = 27,
                            CustomerId = 27,
                            EventId = 27,
                            SalDate = "01.06.2026",
                            TotalPrice = 15000m,
                            TotalQuantity = 50
                        },
                        new
                        {
                            Id = 28,
                            CustomerId = 28,
                            EventId = 28,
                            SalDate = "01.08.2026",
                            TotalPrice = 15000m,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 29,
                            CustomerId = 29,
                            EventId = 29,
                            SalDate = "01.09.2026",
                            TotalPrice = 4000m,
                            TotalQuantity = 20
                        },
                        new
                        {
                            Id = 30,
                            CustomerId = 30,
                            EventId = 30,
                            SalDate = "01.10.2026",
                            TotalPrice = 1500m,
                            TotalQuantity = 10
                        },
                        new
                        {
                            Id = 31,
                            CustomerId = 31,
                            EventId = 31,
                            SalDate = "01.10.2026",
                            TotalPrice = 1500m,
                            TotalQuantity = 15
                        },
                        new
                        {
                            Id = 32,
                            CustomerId = 32,
                            EventId = 32,
                            SalDate = "01.11.2026",
                            TotalPrice = 2000m,
                            TotalQuantity = 10
                        });
                });

            modelBuilder.Entity("Artysan_Entities.Entites.EventSaleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("EventSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("EventSaleId");

                    b.ToTable("EventSaleDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            EventSaleId = 1,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 2,
                            EventId = 2,
                            EventSaleId = 2,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 3,
                            EventId = 3,
                            EventSaleId = 3,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 4,
                            EventId = 4,
                            EventSaleId = 4,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 5,
                            EventId = 5,
                            EventSaleId = 5,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 6,
                            EventId = 6,
                            EventSaleId = 6,
                            Quantity = 2,
                            UnitPrice = 750m
                        },
                        new
                        {
                            Id = 7,
                            EventId = 7,
                            EventSaleId = 7,
                            Quantity = 3,
                            UnitPrice = 200m
                        },
                        new
                        {
                            Id = 8,
                            EventId = 8,
                            EventSaleId = 8,
                            Quantity = 5,
                            UnitPrice = 300m
                        },
                        new
                        {
                            Id = 9,
                            EventId = 9,
                            EventSaleId = 9,
                            Quantity = 10,
                            UnitPrice = 150m
                        },
                        new
                        {
                            Id = 10,
                            EventId = 10,
                            EventSaleId = 10,
                            Quantity = 3,
                            UnitPrice = 1000m
                        },
                        new
                        {
                            Id = 11,
                            EventId = 11,
                            EventSaleId = 11,
                            Quantity = 20,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = 12,
                            EventId = 12,
                            EventSaleId = 12,
                            Quantity = 4,
                            UnitPrice = 60m
                        },
                        new
                        {
                            Id = 13,
                            EventId = 13,
                            EventSaleId = 13,
                            Quantity = 3,
                            UnitPrice = 300m
                        },
                        new
                        {
                            Id = 14,
                            EventId = 14,
                            EventSaleId = 14,
                            Quantity = 10,
                            UnitPrice = 200m
                        },
                        new
                        {
                            Id = 15,
                            EventId = 15,
                            EventSaleId = 15,
                            Quantity = 6,
                            UnitPrice = 300m
                        },
                        new
                        {
                            Id = 16,
                            EventId = 16,
                            EventSaleId = 16,
                            Quantity = 8,
                            UnitPrice = 120m
                        },
                        new
                        {
                            Id = 17,
                            EventId = 17,
                            EventSaleId = 17,
                            Quantity = 5,
                            UnitPrice = 750m
                        },
                        new
                        {
                            Id = 18,
                            EventId = 18,
                            EventSaleId = 18,
                            Quantity = 2,
                            UnitPrice = 300m
                        },
                        new
                        {
                            Id = 19,
                            EventId = 19,
                            EventSaleId = 19,
                            Quantity = 4,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = 20,
                            EventId = 20,
                            EventSaleId = 20,
                            Quantity = 6,
                            UnitPrice = 180m
                        },
                        new
                        {
                            Id = 21,
                            EventId = 21,
                            EventSaleId = 21,
                            Quantity = 5,
                            UnitPrice = 300m
                        },
                        new
                        {
                            Id = 22,
                            EventId = 22,
                            EventSaleId = 22,
                            Quantity = 8,
                            UnitPrice = 250m
                        },
                        new
                        {
                            Id = 23,
                            EventId = 23,
                            EventSaleId = 23,
                            Quantity = 3,
                            UnitPrice = 120m
                        },
                        new
                        {
                            Id = 24,
                            EventId = 24,
                            EventSaleId = 24,
                            Quantity = 5,
                            UnitPrice = 350m
                        },
                        new
                        {
                            Id = 25,
                            EventId = 25,
                            EventSaleId = 25,
                            Quantity = 7,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 26,
                            EventId = 26,
                            EventSaleId = 26,
                            Quantity = 2,
                            UnitPrice = 150m
                        },
                        new
                        {
                            Id = 27,
                            EventId = 27,
                            EventSaleId = 27,
                            Quantity = 10,
                            UnitPrice = 300m
                        },
                        new
                        {
                            Id = 28,
                            EventId = 28,
                            EventSaleId = 28,
                            Quantity = 10,
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = 29,
                            EventId = 29,
                            EventSaleId = 29,
                            Quantity = 20,
                            UnitPrice = 200m
                        },
                        new
                        {
                            Id = 30,
                            EventId = 30,
                            EventSaleId = 30,
                            Quantity = 10,
                            UnitPrice = 150m
                        },
                        new
                        {
                            Id = 31,
                            EventId = 31,
                            EventSaleId = 31,
                            Quantity = 15,
                            UnitPrice = 100m
                        },
                        new
                        {
                            Id = 32,
                            EventId = 32,
                            EventSaleId = 32,
                            Quantity = 10,
                            UnitPrice = 200m
                        });
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventUrl = "www.example.com",
                            LocImageUrl = "/img/hande.jpeg",
                            Venue = "Ankara Oran Açıkhava Sahnesi"
                        },
                        new
                        {
                            Id = 2,
                            EventUrl = "www.example.com",
                            LocImageUrl = "../img/resim.jpg",
                            Venue = "Antalya Alanya Açıkhava Tiyatrosu"
                        },
                        new
                        {
                            Id = 3,
                            EventUrl = "www.example.com",
                            LocImageUrl = "../img/gs.jpg",
                            Venue = "Rams Park Arena"
                        },
                        new
                        {
                            Id = 4,
                            EventUrl = "www.example.com",
                            LocImageUrl = "/img/resim.jpg",
                            Venue = "Paribu Istinye Park"
                        },
                        new
                        {
                            Id = 5,
                            EventUrl = "www.example.com",
                            LocImageUrl = "/img/resim.jpg",
                            Venue = "Istanbul Workshop"
                        },
                        new
                        {
                            Id = 6,
                            EventUrl = "www.example.com/sezen-aksu-izmir",
                            LocImageUrl = "../img/izmir-kulturpark.jpg",
                            Venue = "İzmir Kültürpark Açıkhava Tiyatrosu"
                        },
                        new
                        {
                            Id = 7,
                            EventUrl = "www.example.com/hamlet-ankara",
                            LocImageUrl = "../img/ankara-devlet-tiyatrosu.jpg",
                            Venue = "Ankara Devlet Tiyatrosu"
                        },
                        new
                        {
                            Id = 8,
                            EventUrl = "www.example.com/fenerbahce-efes",
                            LocImageUrl = "../img/ulker-sports-arena.jpg",
                            Venue = "Ülker Sports Arena"
                        },
                        new
                        {
                            Id = 9,
                            EventUrl = "www.example.com/avatar3-premiere",
                            LocImageUrl = "../img/cinemaximum-zorlu.jpg",
                            Venue = "Cinemaximum Zorlu Center"
                        },
                        new
                        {
                            Id = 10,
                            EventUrl = "www.example.com/photoshop-masterclass",
                            LocImageUrl = "../img/atasehir-sanat-merkezi.jpg",
                            Venue = "Ataşehir Sanat Merkezi"
                        },
                        new
                        {
                            Id = 11,
                            EventUrl = "www.example.com/coldplay-istanbul",
                            LocImageUrl = "../img/volkswagen-arena.jpg",
                            Venue = "Volkswagen Arena"
                        },
                        new
                        {
                            Id = 12,
                            EventUrl = "www.example.com/inception-imax-screening",
                            LocImageUrl = "../img/cinemaximum-zorlu.jpg",
                            Venue = "Cinemaximum Zorlu Center"
                        },
                        new
                        {
                            Id = 13,
                            EventUrl = "www.example.com/macbeth-2025",
                            LocImageUrl = "../img/zorlu-psm.jpg",
                            Venue = "Zorlu Performans Sanatları Merkezi"
                        },
                        new
                        {
                            Id = 14,
                            EventUrl = "www.example.com/fenerbahce-galatasaray-2025",
                            LocImageUrl = "../img/ulker-stadyumu.jpg",
                            Venue = "Ülker Stadyumu Fenerbahçe Şükrü Saracoğlu Spor Kompleksi"
                        },
                        new
                        {
                            Id = 15,
                            EventUrl = "www.example.com/duman-konseri-2025",
                            LocImageUrl = "../img/kucukciftlik-park.jpg",
                            Venue = "KüçükÇiftlik Park"
                        },
                        new
                        {
                            Id = 16,
                            EventUrl = "www.example.com/dune-part-three-premiere",
                            LocImageUrl = "../img/kanyon-cinemaximum.jpg",
                            Venue = "Kanyon Cinemaximum"
                        },
                        new
                        {
                            Id = 17,
                            EventUrl = "www.example.com/tech-summit-2025",
                            LocImageUrl = "../img/istanbul-kongre-merkezi.jpg",
                            Venue = "İstanbul Kongre Merkezi"
                        },
                        new
                        {
                            Id = 18,
                            EventUrl = "www.example.com/anadolu-efes-fenerbahce-2025",
                            LocImageUrl = "../img/sinan-erdem-arena.jpg",
                            Venue = "Sinan Erdem Spor Salonu"
                        },
                        new
                        {
                            Id = 19,
                            EventUrl = "www.example.com/basketbol-all-star-2026",
                            LocImageUrl = "../img/turk-telekom-arena.jpg",
                            Venue = "Rams Park Arena"
                        },
                        new
                        {
                            Id = 20,
                            EventUrl = "www.example.com/les-miserables-2026",
                            LocImageUrl = "../img/zorlu-psm.jpg",
                            Venue = "Zorlu PSM"
                        },
                        new
                        {
                            Id = 21,
                            EventUrl = "www.example.com/superlig-derbi-2026",
                            LocImageUrl = "../img/vodafone-park.jpg",
                            Venue = "Vodafone Park"
                        },
                        new
                        {
                            Id = 22,
                            EventUrl = "www.example.com/rock-festival-2026",
                            LocImageUrl = "../img/kucukciftlik-park.jpg",
                            Venue = "Küçükçiftlik Park"
                        },
                        new
                        {
                            Id = 23,
                            EventUrl = "www.example.com/blockbuster-premiere-2026",
                            LocImageUrl = "../img/cinemaximum-kanyon.jpg",
                            Venue = "Cinemaximum Kanyon"
                        },
                        new
                        {
                            Id = 24,
                            EventUrl = "www.example.com/milli-takim-2026",
                            LocImageUrl = "../img/ulker-stadyumu.jpg",
                            Venue = "Ülker Stadyumu"
                        },
                        new
                        {
                            Id = 25,
                            EventUrl = "www.example.com/yaz-konseri-2026",
                            LocImageUrl = "../img/harbiye-acik-hava.jpg",
                            Venue = "Harbiye Açık Hava Tiyatrosu"
                        },
                        new
                        {
                            Id = 26,
                            EventUrl = "www.example.com/ters yüz-2026",
                            LocImageUrl = "../img/atlas-1948-sinemasi.jpg",
                            Venue = "Ters yüz 2 "
                        },
                        new
                        {
                            Id = 27,
                            EventUrl = "www.example.com/champions-league-final-2026",
                            LocImageUrl = "../img/ataturk-olimpiyat-stadyumu.jpg",
                            Venue = "Atatürk Olimpiyat Stadyumu"
                        },
                        new
                        {
                            Id = 28,
                            EventUrl = "www.example.com/muzik-festivali-2026",
                            LocImageUrl = "../img/volkswagen-arena.jpg",
                            Venue = "Volkswagen Arena"
                        },
                        new
                        {
                            Id = 29,
                            EventUrl = "www.example.com/tiyatro-festivali-2026",
                            LocImageUrl = "../img/zorlu-psm.jpg",
                            Venue = "Zorlu PSM"
                        },
                        new
                        {
                            Id = 30,
                            EventUrl = "www.example.com/star-wars-premiere-2026",
                            LocImageUrl = "../img/cinemaximum-istinyepark.jpg",
                            Venue = "Cinemaximum İstinyePark"
                        },
                        new
                        {
                            Id = 31,
                            EventUrl = "www.example.com/avengers-premiere-2026",
                            LocImageUrl = "../img/cinemaximum-kanyon.jpg",
                            Venue = "Cinemaximum Kanyon"
                        },
                        new
                        {
                            Id = 32,
                            EventUrl = "www.example.com/frozen-premiere-2026",
                            LocImageUrl = "../img/cinemaximum-citys-nisantasi.jpg",
                            Venue = "Cinemaximum City’s Nişantaşı"
                        });
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TicketName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 2,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 3,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 4,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 5,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 6,
                            Price = 750m,
                            TicketName = "VIP"
                        },
                        new
                        {
                            Id = 7,
                            Price = 200m,
                            TicketName = "Öğrenci"
                        },
                        new
                        {
                            Id = 8,
                            Price = 300m,
                            TicketName = "Tribün"
                        },
                        new
                        {
                            Id = 9,
                            Price = 150m,
                            TicketName = "Gold Class"
                        },
                        new
                        {
                            Id = 10,
                            Price = 1000m,
                            TicketName = "Premium"
                        },
                        new
                        {
                            Id = 11,
                            Price = 500m,
                            TicketName = "VIP"
                        },
                        new
                        {
                            Id = 12,
                            Price = 60m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 13,
                            Price = 300m,
                            TicketName = "Ön Sıra"
                        },
                        new
                        {
                            Id = 14,
                            Price = 200m,
                            TicketName = "Maraton"
                        },
                        new
                        {
                            Id = 15,
                            Price = 300m,
                            TicketName = "Genel Giriş"
                        },
                        new
                        {
                            Id = 16,
                            Price = 120m,
                            TicketName = "IMAX"
                        },
                        new
                        {
                            Id = 17,
                            Price = 750m,
                            TicketName = "Platinum"
                        },
                        new
                        {
                            Id = 18,
                            Price = 300m,
                            TicketName = "VIP"
                        },
                        new
                        {
                            Id = 19,
                            Price = 500m,
                            TicketName = "VIP Tribün"
                        },
                        new
                        {
                            Id = 20,
                            Price = 180m,
                            TicketName = "Öğrenci"
                        },
                        new
                        {
                            Id = 21,
                            Price = 300m,
                            TicketName = "Numaralı Tribün"
                        },
                        new
                        {
                            Id = 22,
                            Price = 250m,
                            TicketName = "Genel Giriş"
                        },
                        new
                        {
                            Id = 23,
                            Price = 120m,
                            TicketName = "Premium"
                        },
                        new
                        {
                            Id = 24,
                            Price = 350m,
                            TicketName = "Kapalı Tribün"
                        },
                        new
                        {
                            Id = 25,
                            Price = 400m,
                            TicketName = "Sahne Önü"
                        },
                        new
                        {
                            Id = 26,
                            Price = 150m,
                            TicketName = "Loca"
                        },
                        new
                        {
                            Id = 27,
                            Price = 300m,
                            TicketName = "Açık Tribün"
                        },
                        new
                        {
                            Id = 28,
                            Price = 500m,
                            TicketName = "VIP"
                        },
                        new
                        {
                            Id = 29,
                            Price = 200m,
                            TicketName = "Orta Sıra"
                        },
                        new
                        {
                            Id = 30,
                            Price = 150m,
                            TicketName = "VIP Koltuk"
                        },
                        new
                        {
                            Id = 31,
                            Price = 100m,
                            TicketName = "Standart Koltuk"
                        },
                        new
                        {
                            Id = 32,
                            Price = 200m,
                            TicketName = "Aile Salonu"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Event", b =>
                {
                    b.HasOne("Artysan_Entities.Entites.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Artysan_Entities.Entites.Location", "Location")
                        .WithMany("Events")
                        .HasForeignKey("LocationId");

                    b.HasOne("Artysan_Entities.Entites.Ticket", "Ticket")
                        .WithMany("Events")
                        .HasForeignKey("TicketId");

                    b.Navigation("Category");

                    b.Navigation("Location");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Artysan_Entities.Entites.EventArtist", b =>
                {
                    b.HasOne("Artysan_Entities.Entites.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artysan_Entities.Entites.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.Navigation("Artist");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Artysan_Entities.Entites.EventSale", b =>
                {
                    b.HasOne("Artysan_Entities.Entites.Event", null)
                        .WithMany("EventSales")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("Artysan_Entities.Entites.EventSaleDetail", b =>
                {
                    b.HasOne("Artysan_Entities.Entites.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.HasOne("Artysan_Entities.Entites.EventSale", "EventSale")
                        .WithMany("EventSaleDetails")
                        .HasForeignKey("EventSaleId");

                    b.Navigation("Event");

                    b.Navigation("EventSale");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Artysan_DAL.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Artysan_DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Artysan_DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Artysan_DAL.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artysan_DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Artysan_DAL.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Category", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Event", b =>
                {
                    b.Navigation("EventSales");
                });

            modelBuilder.Entity("Artysan_Entities.Entites.EventSale", b =>
                {
                    b.Navigation("EventSaleDetails");
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Location", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Artysan_Entities.Entites.Ticket", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
