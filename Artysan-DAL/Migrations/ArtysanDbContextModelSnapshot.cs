// <auto-generated />
using System;
using Artysan_DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Artysan_DAL.Migrations
{
    [DbContext(typeof(ArtysanDbContext))]
    partial class ArtysanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Artysan_DAL.Entites.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArtImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtistLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArtistName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtImageUrl = "../img/resim.com",
                            ArtistLink = "www.example.com",
                            ArtistName = "Hande"
                        },
                        new
                        {
                            Id = 2,
                            ArtImageUrl = "../img/resim.com",
                            ArtistLink = "www.example.com",
                            ArtistName = "Volkan Konak"
                        },
                        new
                        {
                            Id = 3,
                            ArtImageUrl = "../img/resim.com",
                            ArtistLink = "www.example.com",
                            ArtistName = "The White Buffalo"
                        },
                        new
                        {
                            Id = 4,
                            ArtImageUrl = "../img/resim.com",
                            ArtistLink = "www.example.com",
                            ArtistName = "maNga"
                        },
                        new
                        {
                            Id = 5,
                            ArtImageUrl = "../img/resim.com",
                            ArtistLink = "www.example.com",
                            ArtistName = "İbrahim Tatlıses"
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("CatDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 2,
                            CatDescription = "Müzikal gösteri",
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 3,
                            CatDescription = "Müzikal gösteri",
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 4,
                            CatName = "Konser"
                        },
                        new
                        {
                            id = 5,
                            CatName = "Konser"
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Beşiktaş-İstanbul",
                            CustomerName = "neşe",
                            Email = "aucar@gmail.com",
                            Password = "123",
                            Phone = "05340743588",
                            Surname = "Uçar"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Beşiktaş-İstanbul",
                            CustomerName = "Altay",
                            Email = "ucar@gmail.com",
                            Password = "123",
                            Phone = "05340742386",
                            Surname = "Uçar"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Beşiktaş-İstanbul",
                            CustomerName = "Sarper",
                            Email = "lubnan@gmail.com",
                            Password = "123",
                            Phone = "05340743234",
                            Surname = "Uçar"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Beşiktaş-İstanbul",
                            CustomerName = "james",
                            Email = "aabc@gmail.com",
                            Password = "123",
                            Phone = "05340743586",
                            Surname = "Uçar"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Beşiktaş-İstanbul",
                            CustomerName = "Ahmet",
                            Email = "acar@gmail.com",
                            Password = "123",
                            Phone = "05340731286",
                            Surname = "acar"
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("EventDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("TicketId");

                    b.ToTable("events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            EventDate = "21.08.2024",
                            ImageUrl = "../img/resim.jpg",
                            LocationId = 1,
                            Name = "Rock Festivali",
                            Stock = 500
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            EventDate = "21.08.2024",
                            ImageUrl = "../img/resim.jpg",
                            LocationId = 2,
                            Name = "Rock Festivali",
                            Stock = 500
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            EventDate = "21.08.2024",
                            ImageUrl = "../img/resim.jpg",
                            LocationId = 3,
                            Name = "Rock Festivali",
                            Stock = 500
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            EventDate = "21.08.2024",
                            ImageUrl = "../img/resim.jpg",
                            LocationId = 4,
                            Name = "Rock Festivali",
                            Stock = 500
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            EventDate = "21.08.2024",
                            ImageUrl = "../img/resim.jpg",
                            LocationId = 5,
                            Name = "Rock Festivali",
                            Stock = 500
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.EventArtist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("EventId");

                    b.ToTable("eventArtists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            EventId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            EventId = 2
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            EventId = 3
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            EventId = 4
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            EventId = 5
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.EventSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("SalDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventSale");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 2,
                            EventId = 1,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            EventId = 2,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            EventId = 3,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            EventId = 4,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            EventId = 5,
                            SalDate = "09.11.2024",
                            TotalPrice = 1000m,
                            TotalQuantity = 300
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.EventSaleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EventId")
                        .HasColumnType("int");

                    b.Property<int?>("EventSaleId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("EventSaleId");

                    b.ToTable("EventSaleDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventId = 1,
                            EventSaleId = 1,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 2,
                            EventId = 2,
                            EventSaleId = 2,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 3,
                            EventId = 3,
                            EventSaleId = 3,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 4,
                            EventId = 4,
                            EventSaleId = 4,
                            Quantity = 2,
                            UnitPrice = 400m
                        },
                        new
                        {
                            Id = 5,
                            EventId = 5,
                            EventSaleId = 5,
                            Quantity = 2,
                            UnitPrice = 400m
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EventUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventUrl = "www.example.com",
                            LocImageUrl = "../img/resim.jpg",
                            Venue = "Ankara Oran Açıkhava Sahnesi"
                        },
                        new
                        {
                            Id = 2,
                            EventUrl = "www.example.com",
                            LocImageUrl = "../img/resim.jpg",
                            Venue = "Antalya Alanya Açıkhava Tiyatrosu"
                        },
                        new
                        {
                            Id = 3,
                            EventUrl = "www.example.com",
                            LocImageUrl = "../img/resim.jpg",
                            Venue = "İstanbul KüçükÇiftlik Park"
                        },
                        new
                        {
                            Id = 4,
                            EventUrl = "www.example.com",
                            LocImageUrl = "../img/resim.jpg",
                            Venue = "Ankara CSO ADA"
                        },
                        new
                        {
                            Id = 5,
                            EventUrl = "www.example.com",
                            LocImageUrl = "../img/resim.jpg",
                            Venue = "Gaziantep Gaün Açıkhava Sahnesi"
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TicketName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 2,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 3,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 4,
                            Price = 500m,
                            TicketName = "Standart"
                        },
                        new
                        {
                            Id = 5,
                            Price = 500m,
                            TicketName = "Standart"
                        });
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Event", b =>
                {
                    b.HasOne("Artysan_DAL.Entites.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Artysan_DAL.Entites.Location", "Location")
                        .WithMany("Events")
                        .HasForeignKey("LocationId");

                    b.HasOne("Artysan_DAL.Entites.Ticket", null)
                        .WithMany("Events")
                        .HasForeignKey("TicketId");

                    b.Navigation("Category");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Artysan_DAL.Entites.EventArtist", b =>
                {
                    b.HasOne("Artysan_DAL.Entites.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artysan_DAL.Entites.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.Navigation("Artist");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Artysan_DAL.Entites.EventSale", b =>
                {
                    b.HasOne("Artysan_DAL.Entites.Event", null)
                        .WithMany("EventSales")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("Artysan_DAL.Entites.EventSaleDetail", b =>
                {
                    b.HasOne("Artysan_DAL.Entites.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.HasOne("Artysan_DAL.Entites.EventSale", "EventSale")
                        .WithMany("EventSaleDetails")
                        .HasForeignKey("EventSaleId");

                    b.Navigation("Event");

                    b.Navigation("EventSale");
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Category", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Event", b =>
                {
                    b.Navigation("EventSales");
                });

            modelBuilder.Entity("Artysan_DAL.Entites.EventSale", b =>
                {
                    b.Navigation("EventSaleDetails");
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Location", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Artysan_DAL.Entites.Ticket", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
